@using LibraryProject.DTOs
@model IEnumerable<BookDTO>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Book List";
    var role = Context.Session.GetString("Role");
}

<h2 class="text-center mb-4">Book List</h2>

<div class="row mb-4">
    <div class="col-md-10">
        <form method="get" class="row g-2 align-items-center">
            <div class="col-md-6">
                <input type="text" name="searchQuery" class="form-control" placeholder="Search by Title or Author..."
                       value="@ViewBag.SearchQuery" />
            </div>

            <div class="col-md-4">
                <select name="genreId" class="form-select">
                    <option value="">All Genres</option>
                    @foreach (var genre in ViewBag.Genres)
                    {
                        <option value="@genre.Value" selected="@(genre.Value == Context.Request.Query["genreId"] ? "selected" : null)">
                            @genre.Text
                        </option>
                    }
                </select>
            </div>

            <div class="col-md-2 d-grid">
                <button type="submit" class="btn btn-primary">Search</button>
            </div>
        </form>
    </div>

    @if (role == "Admin" || role == "Librarian")
    {
        <div class="col-md-2 d-grid">
            <a href="/Book/Create" class="btn btn-success">+ Add Book</a>
        </div>
    }
</div>

<div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
    @foreach (var book in Model)
    {
        <div class="col">
            <div class="card h-100 shadow-sm">
                <img src="@book.ImageUrl" class="card-img-top" alt="@book.Title" style="height: 250px; object-fit: cover;">
                <div class="card-body">
                    <h5 class="card-title">@book.Title</h5>
                    <p class="card-text">Author: <strong>@book.Author</strong></p>
                    <p class="card-text">
                        Genre: <span class="badge bg-primary">@book.GenreName</span>
                    </p>
                    <p class="card-text">
                        Price: <span class="badge bg-warning text-dark"> @book.BorrowingPrice.ToString("C") </span>
                    </p>
                    <p class="card-text">
                        Available:
                        @if (book.IsAvailable.Value)
                        {
                            <span class="badge bg-success">Yes</span>
                        }
                        else
                        {
                            <span class="badge bg-danger">No</span>
                        }
                    </p>

                    <div class="d-grid gap-2">
                        <a href="/Book/Detail/@book.BookId" class="btn btn-primary">View Details</a>

                        @if (role == "Admin" || role == "Librarian")
                        {
                            <a href="/Book/Edit/@book.BookId" class="btn btn-warning">Edit</a>
                            <button class="btn btn-danger" onclick="confirmDelete(@book.BookId, @(book.IsAvailable.ToString().ToLower()))">Delete</button>
                        }
                        @if (book.IsAvailable.Value && role == "Reader")
                        {
                            <a href="/Borrowing/Borrow/@book.BookId" class="btn btn-success">Borrow</a>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@if (!Model.Any())
{
    <div class="alert alert-warning text-center mt-4">No books found.</div>
}

<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this book?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <a id="confirmDeleteBtn" class="btn btn-danger">Delete</a>
            </div>
        </div>
    </div>
</div>

<script>
    function confirmDelete(bookId, isAvailable) {
        if (!isAvailable) {
            alert("This book cannot be deleted because it has not been returned.");
            return;
        }

        document.getElementById("confirmDeleteBtn").href = "/Book/Delete/" + bookId;
        var deleteModal = new bootstrap.Modal(document.getElementById("deleteModal"));
        deleteModal.show();
    }
</script>
